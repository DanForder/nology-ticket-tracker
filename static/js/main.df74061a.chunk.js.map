{"version":3,"sources":["components/Counter/Counter.jsx","components/Ticket/Ticket.jsx","components/TicketContainer/TicketContainer.jsx","components/ToggleSwitch/ToggleSwitch.jsx","data/tickets.js","App.jsx","reportWebVitals.js","index.js"],"names":["Counter","useState","count","setCount","className","onClick","Ticket","name","role","TicketContainer","tickets","map","index","ToggleSwitch","handleToggle","type","id","App","isDark","setIsDark","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRA+BeA,EA5BC,WACd,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OACE,sBAAKC,UAAU,UAAf,UACE,mBAAGA,UAAU,iBAAb,SAA+BF,IAC/B,wBAAQG,QAXY,WAClBH,EAAQ,GAIZC,EAASD,EAAQ,IAMmBE,UAAU,kBAA5C,eAGA,wBAAQC,QAlBY,WACtBF,EAASD,EAAQ,IAiBmBE,UAAU,kBAA5C,mBCTSE,G,MAZA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACtB,OACE,sBAAKJ,UAAU,SAAf,UACE,mBAAG,aAAYG,EAAMH,UAAU,eAA/B,SACGG,IAEH,mBAAGH,UAAU,eAAb,SAA6BI,IAC7B,cAAC,EAAD,SCGSC,G,MAVgB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChC,OACE,sBAAMN,UAAU,mBAAhB,SACGM,EAAQC,KAAI,WAAiBC,GAAjB,IAAGL,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACX,cAAC,EAAD,CAAQD,KAAMA,EAAMC,KAAMA,GAAWI,UCQ9BC,G,MAbM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACtB,OACE,wBAAOV,UAAU,gBAAjB,UACE,uBACEA,UAAU,0BACVW,KAAK,WACLV,QAASS,IAEX,sBAAMV,UAAU,+BC0CPM,EApDC,CACd,CACEM,GAAI,EACJT,KAAM,eACNC,KAAM,6BAER,CACEQ,GAAI,EACJT,KAAM,iBACNC,KAAM,6BAER,CACEQ,GAAI,EACJT,KAAM,eACNC,KAAM,6BAER,CACEQ,GAAI,EACJT,KAAM,gBACNC,KAAM,sBAER,CACEQ,GAAI,EACJT,KAAM,gBACNC,KAAM,sBAER,CACEQ,GAAI,EACJT,KAAM,aACNC,KAAM,6BAER,CACEQ,GAAI,EACJT,KAAM,kBACNC,KAAM,mBAER,CACEQ,GAAI,EACJT,KAAM,aACNC,KAAM,UAER,CACEQ,GAAI,EACJT,KAAM,gBACNC,KAAM,UAER,CACEQ,GAAI,GACJT,KAAM,mBACNC,KAAM,aC3BKS,G,MAhBH,WACV,MAA4BhB,oBAAS,GAArC,mBAAOiB,EAAP,KAAeC,EAAf,KAMA,OACE,sBAAKf,UAAW,QAAUc,EAAS,YAAc,cAAjD,UACE,cAAC,EAAD,CAAcJ,aANG,WACnBK,GAAWD,MAMT,gDACA,cAAC,EAAD,CAAiBR,QAASA,SCLjBU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.df74061a.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./Counter.scss\";\n\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n\n  const handleIncrement = () => {\n    setCount(count + 1);\n  };\n\n  const handleDecrement = () => {\n    if (count < 1) {\n      return;\n    }\n\n    setCount(count - 1);\n  };\n\n  return (\n    <div className=\"counter\">\n      <p className=\"counter__score\">{count}</p>\n      <button onClick={handleDecrement} className=\"counter__button\">\n        -\n      </button>\n      <button onClick={handleIncrement} className=\"counter__button\">\n        +\n      </button>\n    </div>\n  );\n};\n\nexport default Counter;\n","import Counter from \"../Counter/Counter\";\nimport \"./Ticket.scss\";\n\nconst Ticket = ({ name, role }) => {\n  return (\n    <div className=\"ticket\">\n      <p data-title={name} className=\"ticket__name\">\n        {name}\n      </p>\n      <p className=\"ticket__role\">{role}</p>\n      <Counter />\n    </div>\n  );\n};\n\nexport default Ticket;\n","import Ticket from \"../Ticket/Ticket\";\nimport \"./TicketContainer.scss\";\n\nexport const TicketContainer = ({ tickets }) => {\n  return (\n    <main className=\"ticket-container\">\n      {tickets.map(({ name, role }, index) => (\n        <Ticket name={name} role={role} key={index} />\n      ))}\n    </main>\n  );\n};\n\nexport default TicketContainer;\n","import \"./ToggleSwitch.scss\";\n\nconst ToggleSwitch = ({ handleToggle }) => {\n  return (\n    <label className=\"toggle-switch\">\n      <input\n        className=\"toggle-switch__checkbox\"\n        type=\"checkbox\"\n        onClick={handleToggle}\n      />\n      <span className=\"toggle-switch__slider\"></span>\n    </label>\n  );\n};\n\nexport default ToggleSwitch;\n","const tickets = [\n  {\n    id: 1,\n    name: \"Alima Miller\",\n    role: \"Junior Software Developer\",\n  },\n  {\n    id: 2,\n    name: \"Evelyn Rodgers\",\n    role: \"Junior Software Developer\",\n  },\n  {\n    id: 3,\n    name: \"Henley Myers\",\n    role: \"Junior Software Developer\",\n  },\n  {\n    id: 4,\n    name: \"Celyn Sanders\",\n    role: \"Software Developer\",\n  },\n  {\n    id: 5,\n    name: \"Effie Mohamed\",\n    role: \"Software Developer\",\n  },\n  {\n    id: 6,\n    name: \"Karam Lees\",\n    role: \"Senior Software Developer\",\n  },\n  {\n    id: 7,\n    name: \"Eleanor Dowling\",\n    role: \"Project Manager\",\n  },\n  {\n    id: 8,\n    name: \"Haris Grey\",\n    role: \"Tester\",\n  },\n  {\n    id: 9,\n    name: \"Sohaib Farley\",\n    role: \"Tester\",\n  },\n  {\n    id: 10,\n    name: \"Phillip Mitchell\",\n    role: \"Hard Man\",\n  },\n];\nexport default tickets;\n","import { useState } from \"react\";\nimport TicketContainer from \"./components/TicketContainer/TicketContainer\";\nimport ToggleSwitch from \"./components/ToggleSwitch/ToggleSwitch\";\nimport tickets from \"./data/tickets\";\nimport \"./styles/main.scss\";\n\nconst App = () => {\n  const [isDark, setIsDark] = useState(true);\n\n  const handleToggle = () => {\n    setIsDark(!isDark);\n  };\n\n  return (\n    <div className={\"app \" + (isDark ? \"dark-mode\" : \"light-mode\")}>\n      <ToggleSwitch handleToggle={handleToggle} />\n      <h1>Ticket Tracker</h1>\n      <TicketContainer tickets={tickets} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}